#!/bin/bash

# Script de Deploy para Produ√ß√£o - Sistema OBM Filament
# Execute este script no servidor de produ√ß√£o ap√≥s fazer o deploy do c√≥digo

echo "üöÄ Iniciando deploy para produ√ß√£o..."

# Verificar se estamos em produ√ß√£o
if [ "$APP_ENV" != "production" ]; then
    echo "‚ö†Ô∏è  ATEN√á√ÉO: APP_ENV n√£o est√° definido como 'production'"
    echo "   Verifique o arquivo .env antes de continuar"
    read -p "   Deseja continuar mesmo assim? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Deploy cancelado"
        exit 1
    fi
fi

# Verificar se HTTPS est√° configurado
if [[ "$APP_URL" != https://* ]]; then
    echo "‚ö†Ô∏è  ATEN√á√ÉO: APP_URL n√£o est√° usando HTTPS"
    echo "   URL atual: $APP_URL"
    echo "   Para produ√ß√£o, recomenda-se usar HTTPS"
fi

echo "üìã Verificando configura√ß√µes de sess√£o..."

# Verificar configura√ß√µes cr√≠ticas de sess√£o
if [ "$SESSION_SECURE_COOKIE" != "true" ]; then
    echo "‚ö†Ô∏è  RECOMENDA√á√ÉO: SESSION_SECURE_COOKIE deveria ser 'true' em produ√ß√£o"
fi

if [ "$SESSION_HTTP_ONLY" != "true" ]; then
    echo "‚ö†Ô∏è  RECOMENDA√á√ÉO: SESSION_HTTP_ONLY deveria ser 'true' para seguran√ßa"
fi

echo "üîß Executando comandos de deploy..."

# Instalar depend√™ncias
echo "üì¶ Instalando depend√™ncias..."
composer install --no-dev --optimize-autoloader

# Gerar chave da aplica√ß√£o se n√£o existir
if [ -z "$APP_KEY" ]; then
    echo "üîë Gerando chave da aplica√ß√£o..."
    php artisan key:generate --force
fi

# Executar migra√ß√µes
echo "üóÑÔ∏è  Executando migra√ß√µes..."
php artisan migrate --force

# Limpar e otimizar caches
echo "üßπ Limpando caches..."
php artisan config:clear
php artisan cache:clear
php artisan route:clear
php artisan view:clear

echo "‚ö° Otimizando para produ√ß√£o..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

# Limpar sess√µes antigas (opcional)
read -p "üóëÔ∏è  Deseja limpar todas as sess√µes existentes? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    php artisan tinker --execute="DB::table('sessions')->delete(); echo 'Sess√µes limpas';"
fi

# Definir permiss√µes corretas
echo "üîí Configurando permiss√µes..."
chmod -R 755 storage bootstrap/cache
chown -R www-data:www-data storage bootstrap/cache

echo "‚úÖ Deploy conclu√≠do!"
echo ""
echo "üîç Pr√≥ximos passos:"
echo "   1. Teste o login no ambiente de produ√ß√£o"
echo "   2. Verifique se as sess√µes persistem"
echo "   3. Monitore os logs para erros: tail -f storage/logs/laravel.log"
echo ""
echo "üìä Configura√ß√µes atuais:"
echo "   APP_ENV: $APP_ENV"
echo "   APP_URL: $APP_URL"
echo "   SESSION_SECURE_COOKIE: $SESSION_SECURE_COOKIE"
echo "   SESSION_DOMAIN: $SESSION_DOMAIN"